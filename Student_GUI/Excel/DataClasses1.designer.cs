#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Student_GUI.Excel
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="QLHV")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertBIEN_LAI(BIEN_LAI instance);
    partial void UpdateBIEN_LAI(BIEN_LAI instance);
    partial void DeleteBIEN_LAI(BIEN_LAI instance);
    partial void InsertCA_HOC(CA_HOC instance);
    partial void UpdateCA_HOC(CA_HOC instance);
    partial void DeleteCA_HOC(CA_HOC instance);
    partial void InsertDANG_KI(DANG_KI instance);
    partial void UpdateDANG_KI(DANG_KI instance);
    partial void DeleteDANG_KI(DANG_KI instance);
    partial void InsertDAY_HOC(DAY_HOC instance);
    partial void UpdateDAY_HOC(DAY_HOC instance);
    partial void DeleteDAY_HOC(DAY_HOC instance);
    partial void InsertDIEN_GIAM_PHI(DIEN_GIAM_PHI instance);
    partial void UpdateDIEN_GIAM_PHI(DIEN_GIAM_PHI instance);
    partial void DeleteDIEN_GIAM_PHI(DIEN_GIAM_PHI instance);
    partial void InsertGIAM_PHI(GIAM_PHI instance);
    partial void UpdateGIAM_PHI(GIAM_PHI instance);
    partial void DeleteGIAM_PHI(GIAM_PHI instance);
    partial void InsertGIAO_VIEN(GIAO_VIEN instance);
    partial void UpdateGIAO_VIEN(GIAO_VIEN instance);
    partial void DeleteGIAO_VIEN(GIAO_VIEN instance);
    partial void InsertHOC_VIEN(HOC_VIEN instance);
    partial void UpdateHOC_VIEN(HOC_VIEN instance);
    partial void DeleteHOC_VIEN(HOC_VIEN instance);
    partial void InsertKHOA_HOC(KHOA_HOC instance);
    partial void UpdateKHOA_HOC(KHOA_HOC instance);
    partial void DeleteKHOA_HOC(KHOA_HOC instance);
    partial void InsertKITHI(KITHI instance);
    partial void UpdateKITHI(KITHI instance);
    partial void DeleteKITHI(KITHI instance);
    partial void InsertLOAIPHONG(LOAIPHONG instance);
    partial void UpdateLOAIPHONG(LOAIPHONG instance);
    partial void DeleteLOAIPHONG(LOAIPHONG instance);
    partial void InsertLOPHOC(LOPHOC instance);
    partial void UpdateLOPHOC(LOPHOC instance);
    partial void DeleteLOPHOC(LOPHOC instance);
    partial void InsertMONHOC(MONHOC instance);
    partial void UpdateMONHOC(MONHOC instance);
    partial void DeleteMONHOC(MONHOC instance);
    partial void InsertPHANCONG(PHANCONG instance);
    partial void UpdatePHANCONG(PHANCONG instance);
    partial void DeletePHANCONG(PHANCONG instance);
    partial void InsertPHONGHOC(PHONGHOC instance);
    partial void UpdatePHONGHOC(PHONGHOC instance);
    partial void DeletePHONGHOC(PHONGHOC instance);
    partial void InsertTHI(THI instance);
    partial void UpdateTHI(THI instance);
    partial void DeleteTHI(THI instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::Student_GUI.Properties.Settings.Default.QLHVConnectionString1, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<BIEN_LAI> BIEN_LAIs
		{
			get
			{
				return this.GetTable<BIEN_LAI>();
			}
		}
		
		public System.Data.Linq.Table<XUAT> XUATs
		{
			get
			{
				return this.GetTable<XUAT>();
			}
		}
		
		public System.Data.Linq.Table<CA_HOC> CA_HOCs
		{
			get
			{
				return this.GetTable<CA_HOC>();
			}
		}
		
		public System.Data.Linq.Table<DANG_KI> DANG_KIs
		{
			get
			{
				return this.GetTable<DANG_KI>();
			}
		}
		
		public System.Data.Linq.Table<DAY_HOC> DAY_HOCs
		{
			get
			{
				return this.GetTable<DAY_HOC>();
			}
		}
		
		public System.Data.Linq.Table<DIEN_GIAM_PHI> DIEN_GIAM_PHIs
		{
			get
			{
				return this.GetTable<DIEN_GIAM_PHI>();
			}
		}
		
		public System.Data.Linq.Table<GIAM_PHI> GIAM_PHIs
		{
			get
			{
				return this.GetTable<GIAM_PHI>();
			}
		}
		
		public System.Data.Linq.Table<GIAO_VIEN> GIAO_VIENs
		{
			get
			{
				return this.GetTable<GIAO_VIEN>();
			}
		}
		
		public System.Data.Linq.Table<HOC_VIEN> HOC_VIENs
		{
			get
			{
				return this.GetTable<HOC_VIEN>();
			}
		}
		
		public System.Data.Linq.Table<KHOA_HOC> KHOA_HOCs
		{
			get
			{
				return this.GetTable<KHOA_HOC>();
			}
		}
		
		public System.Data.Linq.Table<KITHI> KITHIs
		{
			get
			{
				return this.GetTable<KITHI>();
			}
		}
		
		public System.Data.Linq.Table<LOAIPHONG> LOAIPHONGs
		{
			get
			{
				return this.GetTable<LOAIPHONG>();
			}
		}
		
		public System.Data.Linq.Table<LOPHOC> LOPHOCs
		{
			get
			{
				return this.GetTable<LOPHOC>();
			}
		}
		
		public System.Data.Linq.Table<MONHOC> MONHOCs
		{
			get
			{
				return this.GetTable<MONHOC>();
			}
		}
		
		public System.Data.Linq.Table<PHANCONG> PHANCONGs
		{
			get
			{
				return this.GetTable<PHANCONG>();
			}
		}
		
		public System.Data.Linq.Table<PHONGHOC> PHONGHOCs
		{
			get
			{
				return this.GetTable<PHONGHOC>();
			}
		}
		
		public System.Data.Linq.Table<THI> THIs
		{
			get
			{
				return this.GetTable<THI>();
			}
		}
		
		public System.Data.Linq.Table<TINHTRANGPHONG> TINHTRANGPHONGs
		{
			get
			{
				return this.GetTable<TINHTRANGPHONG>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BIEN_LAI")]
	public partial class BIEN_LAI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MABL;
		
		private string _NGAYBL;
		
		private string _NOIDUNG;
		
		private System.Nullable<double> _SOTIEN;
		
		private string _BANGCHU;
		
		private EntitySet<DANG_KI> _DANG_KIs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMABLChanging(string value);
    partial void OnMABLChanged();
    partial void OnNGAYBLChanging(string value);
    partial void OnNGAYBLChanged();
    partial void OnNOIDUNGChanging(string value);
    partial void OnNOIDUNGChanged();
    partial void OnSOTIENChanging(System.Nullable<double> value);
    partial void OnSOTIENChanged();
    partial void OnBANGCHUChanging(string value);
    partial void OnBANGCHUChanged();
    #endregion
		
		public BIEN_LAI()
		{
			this._DANG_KIs = new EntitySet<DANG_KI>(new Action<DANG_KI>(this.attach_DANG_KIs), new Action<DANG_KI>(this.detach_DANG_KIs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MABL", DbType="NVarChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MABL
		{
			get
			{
				return this._MABL;
			}
			set
			{
				if ((this._MABL != value))
				{
					this.OnMABLChanging(value);
					this.SendPropertyChanging();
					this._MABL = value;
					this.SendPropertyChanged("MABL");
					this.OnMABLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYBL", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string NGAYBL
		{
			get
			{
				return this._NGAYBL;
			}
			set
			{
				if ((this._NGAYBL != value))
				{
					this.OnNGAYBLChanging(value);
					this.SendPropertyChanging();
					this._NGAYBL = value;
					this.SendPropertyChanged("NGAYBL");
					this.OnNGAYBLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOIDUNG", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string NOIDUNG
		{
			get
			{
				return this._NOIDUNG;
			}
			set
			{
				if ((this._NOIDUNG != value))
				{
					this.OnNOIDUNGChanging(value);
					this.SendPropertyChanging();
					this._NOIDUNG = value;
					this.SendPropertyChanged("NOIDUNG");
					this.OnNOIDUNGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOTIEN", DbType="Float")]
		public System.Nullable<double> SOTIEN
		{
			get
			{
				return this._SOTIEN;
			}
			set
			{
				if ((this._SOTIEN != value))
				{
					this.OnSOTIENChanging(value);
					this.SendPropertyChanging();
					this._SOTIEN = value;
					this.SendPropertyChanged("SOTIEN");
					this.OnSOTIENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BANGCHU", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string BANGCHU
		{
			get
			{
				return this._BANGCHU;
			}
			set
			{
				if ((this._BANGCHU != value))
				{
					this.OnBANGCHUChanging(value);
					this.SendPropertyChanging();
					this._BANGCHU = value;
					this.SendPropertyChanged("BANGCHU");
					this.OnBANGCHUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BIEN_LAI_DANG_KI", Storage="_DANG_KIs", ThisKey="MABL", OtherKey="MABL")]
		public EntitySet<DANG_KI> DANG_KIs
		{
			get
			{
				return this._DANG_KIs;
			}
			set
			{
				this._DANG_KIs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DANG_KIs(DANG_KI entity)
		{
			this.SendPropertyChanging();
			entity.BIEN_LAI = this;
		}
		
		private void detach_DANG_KIs(DANG_KI entity)
		{
			this.SendPropertyChanging();
			entity.BIEN_LAI = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.XUAT")]
	public partial class XUAT
	{
		
		private string _MABL;
		
		private string _MAHOCVIEN;
		
		public XUAT()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MABL", DbType="NVarChar(5) NOT NULL", CanBeNull=false)]
		public string MABL
		{
			get
			{
				return this._MABL;
			}
			set
			{
				if ((this._MABL != value))
				{
					this._MABL = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAHOCVIEN", DbType="NVarChar(5) NOT NULL", CanBeNull=false)]
		public string MAHOCVIEN
		{
			get
			{
				return this._MAHOCVIEN;
			}
			set
			{
				if ((this._MAHOCVIEN != value))
				{
					this._MAHOCVIEN = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CA_HOC")]
	public partial class CA_HOC : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MACAHOC;
		
		private string _BUOI;
		
		private string _GIO;
		
		private EntitySet<PHANCONG> _PHANCONGs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMACAHOCChanging(string value);
    partial void OnMACAHOCChanged();
    partial void OnBUOIChanging(string value);
    partial void OnBUOIChanged();
    partial void OnGIOChanging(string value);
    partial void OnGIOChanged();
    #endregion
		
		public CA_HOC()
		{
			this._PHANCONGs = new EntitySet<PHANCONG>(new Action<PHANCONG>(this.attach_PHANCONGs), new Action<PHANCONG>(this.detach_PHANCONGs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MACAHOC", DbType="NVarChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MACAHOC
		{
			get
			{
				return this._MACAHOC;
			}
			set
			{
				if ((this._MACAHOC != value))
				{
					this.OnMACAHOCChanging(value);
					this.SendPropertyChanging();
					this._MACAHOC = value;
					this.SendPropertyChanged("MACAHOC");
					this.OnMACAHOCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BUOI", DbType="NVarChar(5) NOT NULL", CanBeNull=false)]
		public string BUOI
		{
			get
			{
				return this._BUOI;
			}
			set
			{
				if ((this._BUOI != value))
				{
					this.OnBUOIChanging(value);
					this.SendPropertyChanging();
					this._BUOI = value;
					this.SendPropertyChanged("BUOI");
					this.OnBUOIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GIO", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string GIO
		{
			get
			{
				return this._GIO;
			}
			set
			{
				if ((this._GIO != value))
				{
					this.OnGIOChanging(value);
					this.SendPropertyChanging();
					this._GIO = value;
					this.SendPropertyChanged("GIO");
					this.OnGIOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CA_HOC_PHANCONG", Storage="_PHANCONGs", ThisKey="MACAHOC", OtherKey="MACAHOC")]
		public EntitySet<PHANCONG> PHANCONGs
		{
			get
			{
				return this._PHANCONGs;
			}
			set
			{
				this._PHANCONGs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PHANCONGs(PHANCONG entity)
		{
			this.SendPropertyChanging();
			entity.CA_HOC = this;
		}
		
		private void detach_PHANCONGs(PHANCONG entity)
		{
			this.SendPropertyChanging();
			entity.CA_HOC = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DANG_KI")]
	public partial class DANG_KI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MALOPHOC;
		
		private string _MABL;
		
		private EntityRef<BIEN_LAI> _BIEN_LAI;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMALOPHOCChanging(string value);
    partial void OnMALOPHOCChanged();
    partial void OnMABLChanging(string value);
    partial void OnMABLChanged();
    #endregion
		
		public DANG_KI()
		{
			this._BIEN_LAI = default(EntityRef<BIEN_LAI>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MALOPHOC", DbType="NVarChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MALOPHOC
		{
			get
			{
				return this._MALOPHOC;
			}
			set
			{
				if ((this._MALOPHOC != value))
				{
					this.OnMALOPHOCChanging(value);
					this.SendPropertyChanging();
					this._MALOPHOC = value;
					this.SendPropertyChanged("MALOPHOC");
					this.OnMALOPHOCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MABL", DbType="NVarChar(5) NOT NULL", CanBeNull=false)]
		public string MABL
		{
			get
			{
				return this._MABL;
			}
			set
			{
				if ((this._MABL != value))
				{
					if (this._BIEN_LAI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMABLChanging(value);
					this.SendPropertyChanging();
					this._MABL = value;
					this.SendPropertyChanged("MABL");
					this.OnMABLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BIEN_LAI_DANG_KI", Storage="_BIEN_LAI", ThisKey="MABL", OtherKey="MABL", IsForeignKey=true)]
		public BIEN_LAI BIEN_LAI
		{
			get
			{
				return this._BIEN_LAI.Entity;
			}
			set
			{
				BIEN_LAI previousValue = this._BIEN_LAI.Entity;
				if (((previousValue != value) 
							|| (this._BIEN_LAI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BIEN_LAI.Entity = null;
						previousValue.DANG_KIs.Remove(this);
					}
					this._BIEN_LAI.Entity = value;
					if ((value != null))
					{
						value.DANG_KIs.Add(this);
						this._MABL = value.MABL;
					}
					else
					{
						this._MABL = default(string);
					}
					this.SendPropertyChanged("BIEN_LAI");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DAY_HOC")]
	public partial class DAY_HOC : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MAMON;
		
		private string _MAGIAOVIEN;
		
		private EntityRef<GIAO_VIEN> _GIAO_VIEN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAMONChanging(string value);
    partial void OnMAMONChanged();
    partial void OnMAGIAOVIENChanging(string value);
    partial void OnMAGIAOVIENChanged();
    #endregion
		
		public DAY_HOC()
		{
			this._GIAO_VIEN = default(EntityRef<GIAO_VIEN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAMON", DbType="NVarChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAMON
		{
			get
			{
				return this._MAMON;
			}
			set
			{
				if ((this._MAMON != value))
				{
					this.OnMAMONChanging(value);
					this.SendPropertyChanging();
					this._MAMON = value;
					this.SendPropertyChanged("MAMON");
					this.OnMAMONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAGIAOVIEN", DbType="NVarChar(5) NOT NULL", CanBeNull=false)]
		public string MAGIAOVIEN
		{
			get
			{
				return this._MAGIAOVIEN;
			}
			set
			{
				if ((this._MAGIAOVIEN != value))
				{
					if (this._GIAO_VIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAGIAOVIENChanging(value);
					this.SendPropertyChanging();
					this._MAGIAOVIEN = value;
					this.SendPropertyChanged("MAGIAOVIEN");
					this.OnMAGIAOVIENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GIAO_VIEN_DAY_HOC", Storage="_GIAO_VIEN", ThisKey="MAGIAOVIEN", OtherKey="MAGIAOVIEN", IsForeignKey=true)]
		public GIAO_VIEN GIAO_VIEN
		{
			get
			{
				return this._GIAO_VIEN.Entity;
			}
			set
			{
				GIAO_VIEN previousValue = this._GIAO_VIEN.Entity;
				if (((previousValue != value) 
							|| (this._GIAO_VIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GIAO_VIEN.Entity = null;
						previousValue.DAY_HOCs.Remove(this);
					}
					this._GIAO_VIEN.Entity = value;
					if ((value != null))
					{
						value.DAY_HOCs.Add(this);
						this._MAGIAOVIEN = value.MAGIAOVIEN;
					}
					else
					{
						this._MAGIAOVIEN = default(string);
					}
					this.SendPropertyChanged("GIAO_VIEN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DIEN_GIAM_PHI")]
	public partial class DIEN_GIAM_PHI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MADIEN;
		
		private string _TENDIEN;
		
		private string _MUCGIAM;
		
		private EntitySet<GIAM_PHI> _GIAM_PHIs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMADIENChanging(string value);
    partial void OnMADIENChanged();
    partial void OnTENDIENChanging(string value);
    partial void OnTENDIENChanged();
    partial void OnMUCGIAMChanging(string value);
    partial void OnMUCGIAMChanged();
    #endregion
		
		public DIEN_GIAM_PHI()
		{
			this._GIAM_PHIs = new EntitySet<GIAM_PHI>(new Action<GIAM_PHI>(this.attach_GIAM_PHIs), new Action<GIAM_PHI>(this.detach_GIAM_PHIs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MADIEN", DbType="NVarChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MADIEN
		{
			get
			{
				return this._MADIEN;
			}
			set
			{
				if ((this._MADIEN != value))
				{
					this.OnMADIENChanging(value);
					this.SendPropertyChanging();
					this._MADIEN = value;
					this.SendPropertyChanged("MADIEN");
					this.OnMADIENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENDIEN", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string TENDIEN
		{
			get
			{
				return this._TENDIEN;
			}
			set
			{
				if ((this._TENDIEN != value))
				{
					this.OnTENDIENChanging(value);
					this.SendPropertyChanging();
					this._TENDIEN = value;
					this.SendPropertyChanged("TENDIEN");
					this.OnTENDIENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MUCGIAM", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string MUCGIAM
		{
			get
			{
				return this._MUCGIAM;
			}
			set
			{
				if ((this._MUCGIAM != value))
				{
					this.OnMUCGIAMChanging(value);
					this.SendPropertyChanging();
					this._MUCGIAM = value;
					this.SendPropertyChanged("MUCGIAM");
					this.OnMUCGIAMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DIEN_GIAM_PHI_GIAM_PHI", Storage="_GIAM_PHIs", ThisKey="MADIEN", OtherKey="MADIEN")]
		public EntitySet<GIAM_PHI> GIAM_PHIs
		{
			get
			{
				return this._GIAM_PHIs;
			}
			set
			{
				this._GIAM_PHIs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_GIAM_PHIs(GIAM_PHI entity)
		{
			this.SendPropertyChanging();
			entity.DIEN_GIAM_PHI = this;
		}
		
		private void detach_GIAM_PHIs(GIAM_PHI entity)
		{
			this.SendPropertyChanging();
			entity.DIEN_GIAM_PHI = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GIAM_PHI")]
	public partial class GIAM_PHI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MAHOCVIEN;
		
		private string _MADIEN;
		
		private EntityRef<DIEN_GIAM_PHI> _DIEN_GIAM_PHI;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAHOCVIENChanging(string value);
    partial void OnMAHOCVIENChanged();
    partial void OnMADIENChanging(string value);
    partial void OnMADIENChanged();
    #endregion
		
		public GIAM_PHI()
		{
			this._DIEN_GIAM_PHI = default(EntityRef<DIEN_GIAM_PHI>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAHOCVIEN", DbType="NVarChar(1) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAHOCVIEN
		{
			get
			{
				return this._MAHOCVIEN;
			}
			set
			{
				if ((this._MAHOCVIEN != value))
				{
					this.OnMAHOCVIENChanging(value);
					this.SendPropertyChanging();
					this._MAHOCVIEN = value;
					this.SendPropertyChanged("MAHOCVIEN");
					this.OnMAHOCVIENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MADIEN", DbType="NVarChar(5) NOT NULL", CanBeNull=false)]
		public string MADIEN
		{
			get
			{
				return this._MADIEN;
			}
			set
			{
				if ((this._MADIEN != value))
				{
					if (this._DIEN_GIAM_PHI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMADIENChanging(value);
					this.SendPropertyChanging();
					this._MADIEN = value;
					this.SendPropertyChanged("MADIEN");
					this.OnMADIENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DIEN_GIAM_PHI_GIAM_PHI", Storage="_DIEN_GIAM_PHI", ThisKey="MADIEN", OtherKey="MADIEN", IsForeignKey=true)]
		public DIEN_GIAM_PHI DIEN_GIAM_PHI
		{
			get
			{
				return this._DIEN_GIAM_PHI.Entity;
			}
			set
			{
				DIEN_GIAM_PHI previousValue = this._DIEN_GIAM_PHI.Entity;
				if (((previousValue != value) 
							|| (this._DIEN_GIAM_PHI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DIEN_GIAM_PHI.Entity = null;
						previousValue.GIAM_PHIs.Remove(this);
					}
					this._DIEN_GIAM_PHI.Entity = value;
					if ((value != null))
					{
						value.GIAM_PHIs.Add(this);
						this._MADIEN = value.MADIEN;
					}
					else
					{
						this._MADIEN = default(string);
					}
					this.SendPropertyChanged("DIEN_GIAM_PHI");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GIAO_VIEN")]
	public partial class GIAO_VIEN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MAGIAOVIEN;
		
		private string _HOGIAOVIEN;
		
		private string _TENGIAOVIEN;
		
		private System.DateTime _NGAYSINH;
		
		private string _DIACHI;
		
		private EntitySet<DAY_HOC> _DAY_HOCs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAGIAOVIENChanging(string value);
    partial void OnMAGIAOVIENChanged();
    partial void OnHOGIAOVIENChanging(string value);
    partial void OnHOGIAOVIENChanged();
    partial void OnTENGIAOVIENChanging(string value);
    partial void OnTENGIAOVIENChanged();
    partial void OnNGAYSINHChanging(System.DateTime value);
    partial void OnNGAYSINHChanged();
    partial void OnDIACHIChanging(string value);
    partial void OnDIACHIChanged();
    #endregion
		
		public GIAO_VIEN()
		{
			this._DAY_HOCs = new EntitySet<DAY_HOC>(new Action<DAY_HOC>(this.attach_DAY_HOCs), new Action<DAY_HOC>(this.detach_DAY_HOCs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAGIAOVIEN", DbType="NVarChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAGIAOVIEN
		{
			get
			{
				return this._MAGIAOVIEN;
			}
			set
			{
				if ((this._MAGIAOVIEN != value))
				{
					this.OnMAGIAOVIENChanging(value);
					this.SendPropertyChanging();
					this._MAGIAOVIEN = value;
					this.SendPropertyChanged("MAGIAOVIEN");
					this.OnMAGIAOVIENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HOGIAOVIEN", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string HOGIAOVIEN
		{
			get
			{
				return this._HOGIAOVIEN;
			}
			set
			{
				if ((this._HOGIAOVIEN != value))
				{
					this.OnHOGIAOVIENChanging(value);
					this.SendPropertyChanging();
					this._HOGIAOVIEN = value;
					this.SendPropertyChanged("HOGIAOVIEN");
					this.OnHOGIAOVIENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENGIAOVIEN", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string TENGIAOVIEN
		{
			get
			{
				return this._TENGIAOVIEN;
			}
			set
			{
				if ((this._TENGIAOVIEN != value))
				{
					this.OnTENGIAOVIENChanging(value);
					this.SendPropertyChanging();
					this._TENGIAOVIEN = value;
					this.SendPropertyChanged("TENGIAOVIEN");
					this.OnTENGIAOVIENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYSINH", DbType="Date NOT NULL")]
		public System.DateTime NGAYSINH
		{
			get
			{
				return this._NGAYSINH;
			}
			set
			{
				if ((this._NGAYSINH != value))
				{
					this.OnNGAYSINHChanging(value);
					this.SendPropertyChanging();
					this._NGAYSINH = value;
					this.SendPropertyChanged("NGAYSINH");
					this.OnNGAYSINHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DIACHI", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string DIACHI
		{
			get
			{
				return this._DIACHI;
			}
			set
			{
				if ((this._DIACHI != value))
				{
					this.OnDIACHIChanging(value);
					this.SendPropertyChanging();
					this._DIACHI = value;
					this.SendPropertyChanged("DIACHI");
					this.OnDIACHIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GIAO_VIEN_DAY_HOC", Storage="_DAY_HOCs", ThisKey="MAGIAOVIEN", OtherKey="MAGIAOVIEN")]
		public EntitySet<DAY_HOC> DAY_HOCs
		{
			get
			{
				return this._DAY_HOCs;
			}
			set
			{
				this._DAY_HOCs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DAY_HOCs(DAY_HOC entity)
		{
			this.SendPropertyChanging();
			entity.GIAO_VIEN = this;
		}
		
		private void detach_DAY_HOCs(DAY_HOC entity)
		{
			this.SendPropertyChanging();
			entity.GIAO_VIEN = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HOC_VIEN")]
	public partial class HOC_VIEN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MAHOCVIEN;
		
		private string _HOHOCVIEN;
		
		private string _TENHOCVIEN;
		
		private System.DateTime _NGAYSINH;
		
		private string _DIACHI;
		
		private int _SDT;
		
		private string _NGHENGHIEP;
		
		private EntitySet<THI> _THIs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAHOCVIENChanging(string value);
    partial void OnMAHOCVIENChanged();
    partial void OnHOHOCVIENChanging(string value);
    partial void OnHOHOCVIENChanged();
    partial void OnTENHOCVIENChanging(string value);
    partial void OnTENHOCVIENChanged();
    partial void OnNGAYSINHChanging(System.DateTime value);
    partial void OnNGAYSINHChanged();
    partial void OnDIACHIChanging(string value);
    partial void OnDIACHIChanged();
    partial void OnSDTChanging(int value);
    partial void OnSDTChanged();
    partial void OnNGHENGHIEPChanging(string value);
    partial void OnNGHENGHIEPChanged();
    #endregion
		
		public HOC_VIEN()
		{
			this._THIs = new EntitySet<THI>(new Action<THI>(this.attach_THIs), new Action<THI>(this.detach_THIs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAHOCVIEN", DbType="NVarChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAHOCVIEN
		{
			get
			{
				return this._MAHOCVIEN;
			}
			set
			{
				if ((this._MAHOCVIEN != value))
				{
					this.OnMAHOCVIENChanging(value);
					this.SendPropertyChanging();
					this._MAHOCVIEN = value;
					this.SendPropertyChanged("MAHOCVIEN");
					this.OnMAHOCVIENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HOHOCVIEN", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string HOHOCVIEN
		{
			get
			{
				return this._HOHOCVIEN;
			}
			set
			{
				if ((this._HOHOCVIEN != value))
				{
					this.OnHOHOCVIENChanging(value);
					this.SendPropertyChanging();
					this._HOHOCVIEN = value;
					this.SendPropertyChanged("HOHOCVIEN");
					this.OnHOHOCVIENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENHOCVIEN", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string TENHOCVIEN
		{
			get
			{
				return this._TENHOCVIEN;
			}
			set
			{
				if ((this._TENHOCVIEN != value))
				{
					this.OnTENHOCVIENChanging(value);
					this.SendPropertyChanging();
					this._TENHOCVIEN = value;
					this.SendPropertyChanged("TENHOCVIEN");
					this.OnTENHOCVIENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYSINH", DbType="Date NOT NULL")]
		public System.DateTime NGAYSINH
		{
			get
			{
				return this._NGAYSINH;
			}
			set
			{
				if ((this._NGAYSINH != value))
				{
					this.OnNGAYSINHChanging(value);
					this.SendPropertyChanging();
					this._NGAYSINH = value;
					this.SendPropertyChanged("NGAYSINH");
					this.OnNGAYSINHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DIACHI", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string DIACHI
		{
			get
			{
				return this._DIACHI;
			}
			set
			{
				if ((this._DIACHI != value))
				{
					this.OnDIACHIChanging(value);
					this.SendPropertyChanging();
					this._DIACHI = value;
					this.SendPropertyChanged("DIACHI");
					this.OnDIACHIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT", DbType="Int NOT NULL")]
		public int SDT
		{
			get
			{
				return this._SDT;
			}
			set
			{
				if ((this._SDT != value))
				{
					this.OnSDTChanging(value);
					this.SendPropertyChanging();
					this._SDT = value;
					this.SendPropertyChanged("SDT");
					this.OnSDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGHENGHIEP", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string NGHENGHIEP
		{
			get
			{
				return this._NGHENGHIEP;
			}
			set
			{
				if ((this._NGHENGHIEP != value))
				{
					this.OnNGHENGHIEPChanging(value);
					this.SendPropertyChanging();
					this._NGHENGHIEP = value;
					this.SendPropertyChanged("NGHENGHIEP");
					this.OnNGHENGHIEPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HOC_VIEN_THI", Storage="_THIs", ThisKey="MAHOCVIEN", OtherKey="MAHOCVIEN")]
		public EntitySet<THI> THIs
		{
			get
			{
				return this._THIs;
			}
			set
			{
				this._THIs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_THIs(THI entity)
		{
			this.SendPropertyChanging();
			entity.HOC_VIEN = this;
		}
		
		private void detach_THIs(THI entity)
		{
			this.SendPropertyChanging();
			entity.HOC_VIEN = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KHOA_HOC")]
	public partial class KHOA_HOC : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MAKHOAHOC;
		
		private string _TENKHOAHOC;
		
		private System.DateTime _NGAYBD;
		
		private System.DateTime _NGAYKT;
		
		private EntitySet<MONHOC> _MONHOCs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAKHOAHOCChanging(string value);
    partial void OnMAKHOAHOCChanged();
    partial void OnTENKHOAHOCChanging(string value);
    partial void OnTENKHOAHOCChanged();
    partial void OnNGAYBDChanging(System.DateTime value);
    partial void OnNGAYBDChanged();
    partial void OnNGAYKTChanging(System.DateTime value);
    partial void OnNGAYKTChanged();
    #endregion
		
		public KHOA_HOC()
		{
			this._MONHOCs = new EntitySet<MONHOC>(new Action<MONHOC>(this.attach_MONHOCs), new Action<MONHOC>(this.detach_MONHOCs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAKHOAHOC", DbType="NVarChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAKHOAHOC
		{
			get
			{
				return this._MAKHOAHOC;
			}
			set
			{
				if ((this._MAKHOAHOC != value))
				{
					this.OnMAKHOAHOCChanging(value);
					this.SendPropertyChanging();
					this._MAKHOAHOC = value;
					this.SendPropertyChanged("MAKHOAHOC");
					this.OnMAKHOAHOCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENKHOAHOC", DbType="NVarChar(5) NOT NULL", CanBeNull=false)]
		public string TENKHOAHOC
		{
			get
			{
				return this._TENKHOAHOC;
			}
			set
			{
				if ((this._TENKHOAHOC != value))
				{
					this.OnTENKHOAHOCChanging(value);
					this.SendPropertyChanging();
					this._TENKHOAHOC = value;
					this.SendPropertyChanged("TENKHOAHOC");
					this.OnTENKHOAHOCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYBD", DbType="Date NOT NULL")]
		public System.DateTime NGAYBD
		{
			get
			{
				return this._NGAYBD;
			}
			set
			{
				if ((this._NGAYBD != value))
				{
					this.OnNGAYBDChanging(value);
					this.SendPropertyChanging();
					this._NGAYBD = value;
					this.SendPropertyChanged("NGAYBD");
					this.OnNGAYBDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYKT", DbType="Date NOT NULL")]
		public System.DateTime NGAYKT
		{
			get
			{
				return this._NGAYKT;
			}
			set
			{
				if ((this._NGAYKT != value))
				{
					this.OnNGAYKTChanging(value);
					this.SendPropertyChanging();
					this._NGAYKT = value;
					this.SendPropertyChanged("NGAYKT");
					this.OnNGAYKTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHOA_HOC_MONHOC", Storage="_MONHOCs", ThisKey="MAKHOAHOC", OtherKey="MAKHOAHOC")]
		public EntitySet<MONHOC> MONHOCs
		{
			get
			{
				return this._MONHOCs;
			}
			set
			{
				this._MONHOCs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MONHOCs(MONHOC entity)
		{
			this.SendPropertyChanging();
			entity.KHOA_HOC = this;
		}
		
		private void detach_MONHOCs(MONHOC entity)
		{
			this.SendPropertyChanging();
			entity.KHOA_HOC = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KITHI")]
	public partial class KITHI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MAKITHI;
		
		private string _TENKITHI;
		
		private EntityRef<THI> _THI;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAKITHIChanging(string value);
    partial void OnMAKITHIChanged();
    partial void OnTENKITHIChanging(string value);
    partial void OnTENKITHIChanged();
    #endregion
		
		public KITHI()
		{
			this._THI = default(EntityRef<THI>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAKITHI", DbType="NVarChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAKITHI
		{
			get
			{
				return this._MAKITHI;
			}
			set
			{
				if ((this._MAKITHI != value))
				{
					this.OnMAKITHIChanging(value);
					this.SendPropertyChanging();
					this._MAKITHI = value;
					this.SendPropertyChanged("MAKITHI");
					this.OnMAKITHIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENKITHI", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string TENKITHI
		{
			get
			{
				return this._TENKITHI;
			}
			set
			{
				if ((this._TENKITHI != value))
				{
					this.OnTENKITHIChanging(value);
					this.SendPropertyChanging();
					this._TENKITHI = value;
					this.SendPropertyChanged("TENKITHI");
					this.OnTENKITHIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KITHI_THI", Storage="_THI", ThisKey="MAKITHI", OtherKey="MAKITHI", IsUnique=true, IsForeignKey=false)]
		public THI THI
		{
			get
			{
				return this._THI.Entity;
			}
			set
			{
				THI previousValue = this._THI.Entity;
				if (((previousValue != value) 
							|| (this._THI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._THI.Entity = null;
						previousValue.KITHI = null;
					}
					this._THI.Entity = value;
					if ((value != null))
					{
						value.KITHI = this;
					}
					this.SendPropertyChanged("THI");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LOAIPHONG")]
	public partial class LOAIPHONG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MALOAIPHONG;
		
		private string _TENLOAIPHONG;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMALOAIPHONGChanging(string value);
    partial void OnMALOAIPHONGChanged();
    partial void OnTENLOAIPHONGChanging(string value);
    partial void OnTENLOAIPHONGChanged();
    #endregion
		
		public LOAIPHONG()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MALOAIPHONG", DbType="NVarChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MALOAIPHONG
		{
			get
			{
				return this._MALOAIPHONG;
			}
			set
			{
				if ((this._MALOAIPHONG != value))
				{
					this.OnMALOAIPHONGChanging(value);
					this.SendPropertyChanging();
					this._MALOAIPHONG = value;
					this.SendPropertyChanged("MALOAIPHONG");
					this.OnMALOAIPHONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENLOAIPHONG", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string TENLOAIPHONG
		{
			get
			{
				return this._TENLOAIPHONG;
			}
			set
			{
				if ((this._TENLOAIPHONG != value))
				{
					this.OnTENLOAIPHONGChanging(value);
					this.SendPropertyChanging();
					this._TENLOAIPHONG = value;
					this.SendPropertyChanged("TENLOAIPHONG");
					this.OnTENLOAIPHONGChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LOPHOC")]
	public partial class LOPHOC : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MALOPHOC;
		
		private string _MAMON;
		
		private string _SOLUONG;
		
		private System.DateTime _NGAYBD;
		
		private System.DateTime _NGAYKT;
		
		private string _DAKHOA;
		
		private EntitySet<PHANCONG> _PHANCONGs;
		
		private EntityRef<MONHOC> _MONHOC;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMALOPHOCChanging(string value);
    partial void OnMALOPHOCChanged();
    partial void OnMAMONChanging(string value);
    partial void OnMAMONChanged();
    partial void OnSOLUONGChanging(string value);
    partial void OnSOLUONGChanged();
    partial void OnNGAYBDChanging(System.DateTime value);
    partial void OnNGAYBDChanged();
    partial void OnNGAYKTChanging(System.DateTime value);
    partial void OnNGAYKTChanged();
    partial void OnDAKHOAChanging(string value);
    partial void OnDAKHOAChanged();
    #endregion
		
		public LOPHOC()
		{
			this._PHANCONGs = new EntitySet<PHANCONG>(new Action<PHANCONG>(this.attach_PHANCONGs), new Action<PHANCONG>(this.detach_PHANCONGs));
			this._MONHOC = default(EntityRef<MONHOC>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MALOPHOC", DbType="NVarChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MALOPHOC
		{
			get
			{
				return this._MALOPHOC;
			}
			set
			{
				if ((this._MALOPHOC != value))
				{
					this.OnMALOPHOCChanging(value);
					this.SendPropertyChanging();
					this._MALOPHOC = value;
					this.SendPropertyChanged("MALOPHOC");
					this.OnMALOPHOCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAMON", DbType="NVarChar(5) NOT NULL", CanBeNull=false)]
		public string MAMON
		{
			get
			{
				return this._MAMON;
			}
			set
			{
				if ((this._MAMON != value))
				{
					if (this._MONHOC.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAMONChanging(value);
					this.SendPropertyChanging();
					this._MAMON = value;
					this.SendPropertyChanged("MAMON");
					this.OnMAMONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOLUONG", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string SOLUONG
		{
			get
			{
				return this._SOLUONG;
			}
			set
			{
				if ((this._SOLUONG != value))
				{
					this.OnSOLUONGChanging(value);
					this.SendPropertyChanging();
					this._SOLUONG = value;
					this.SendPropertyChanged("SOLUONG");
					this.OnSOLUONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYBD", DbType="Date NOT NULL")]
		public System.DateTime NGAYBD
		{
			get
			{
				return this._NGAYBD;
			}
			set
			{
				if ((this._NGAYBD != value))
				{
					this.OnNGAYBDChanging(value);
					this.SendPropertyChanging();
					this._NGAYBD = value;
					this.SendPropertyChanged("NGAYBD");
					this.OnNGAYBDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYKT", DbType="Date NOT NULL")]
		public System.DateTime NGAYKT
		{
			get
			{
				return this._NGAYKT;
			}
			set
			{
				if ((this._NGAYKT != value))
				{
					this.OnNGAYKTChanging(value);
					this.SendPropertyChanging();
					this._NGAYKT = value;
					this.SendPropertyChanged("NGAYKT");
					this.OnNGAYKTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DAKHOA", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string DAKHOA
		{
			get
			{
				return this._DAKHOA;
			}
			set
			{
				if ((this._DAKHOA != value))
				{
					this.OnDAKHOAChanging(value);
					this.SendPropertyChanging();
					this._DAKHOA = value;
					this.SendPropertyChanged("DAKHOA");
					this.OnDAKHOAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOPHOC_PHANCONG", Storage="_PHANCONGs", ThisKey="MALOPHOC", OtherKey="MALOPHOC")]
		public EntitySet<PHANCONG> PHANCONGs
		{
			get
			{
				return this._PHANCONGs;
			}
			set
			{
				this._PHANCONGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MONHOC_LOPHOC", Storage="_MONHOC", ThisKey="MAMON", OtherKey="MAMON", IsForeignKey=true)]
		public MONHOC MONHOC
		{
			get
			{
				return this._MONHOC.Entity;
			}
			set
			{
				MONHOC previousValue = this._MONHOC.Entity;
				if (((previousValue != value) 
							|| (this._MONHOC.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MONHOC.Entity = null;
						previousValue.LOPHOCs.Remove(this);
					}
					this._MONHOC.Entity = value;
					if ((value != null))
					{
						value.LOPHOCs.Add(this);
						this._MAMON = value.MAMON;
					}
					else
					{
						this._MAMON = default(string);
					}
					this.SendPropertyChanged("MONHOC");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PHANCONGs(PHANCONG entity)
		{
			this.SendPropertyChanging();
			entity.LOPHOC = this;
		}
		
		private void detach_PHANCONGs(PHANCONG entity)
		{
			this.SendPropertyChanging();
			entity.LOPHOC = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MONHOC")]
	public partial class MONHOC : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MAMON;
		
		private string _MAKHOAHOC;
		
		private string _TENMON;
		
		private double _HOCPHI;
		
		private EntitySet<LOPHOC> _LOPHOCs;
		
		private EntityRef<KHOA_HOC> _KHOA_HOC;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAMONChanging(string value);
    partial void OnMAMONChanged();
    partial void OnMAKHOAHOCChanging(string value);
    partial void OnMAKHOAHOCChanged();
    partial void OnTENMONChanging(string value);
    partial void OnTENMONChanged();
    partial void OnHOCPHIChanging(double value);
    partial void OnHOCPHIChanged();
    #endregion
		
		public MONHOC()
		{
			this._LOPHOCs = new EntitySet<LOPHOC>(new Action<LOPHOC>(this.attach_LOPHOCs), new Action<LOPHOC>(this.detach_LOPHOCs));
			this._KHOA_HOC = default(EntityRef<KHOA_HOC>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAMON", DbType="NVarChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAMON
		{
			get
			{
				return this._MAMON;
			}
			set
			{
				if ((this._MAMON != value))
				{
					this.OnMAMONChanging(value);
					this.SendPropertyChanging();
					this._MAMON = value;
					this.SendPropertyChanged("MAMON");
					this.OnMAMONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAKHOAHOC", DbType="NVarChar(5) NOT NULL", CanBeNull=false)]
		public string MAKHOAHOC
		{
			get
			{
				return this._MAKHOAHOC;
			}
			set
			{
				if ((this._MAKHOAHOC != value))
				{
					if (this._KHOA_HOC.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAKHOAHOCChanging(value);
					this.SendPropertyChanging();
					this._MAKHOAHOC = value;
					this.SendPropertyChanged("MAKHOAHOC");
					this.OnMAKHOAHOCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENMON", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string TENMON
		{
			get
			{
				return this._TENMON;
			}
			set
			{
				if ((this._TENMON != value))
				{
					this.OnTENMONChanging(value);
					this.SendPropertyChanging();
					this._TENMON = value;
					this.SendPropertyChanged("TENMON");
					this.OnTENMONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HOCPHI", DbType="Float NOT NULL")]
		public double HOCPHI
		{
			get
			{
				return this._HOCPHI;
			}
			set
			{
				if ((this._HOCPHI != value))
				{
					this.OnHOCPHIChanging(value);
					this.SendPropertyChanging();
					this._HOCPHI = value;
					this.SendPropertyChanged("HOCPHI");
					this.OnHOCPHIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MONHOC_LOPHOC", Storage="_LOPHOCs", ThisKey="MAMON", OtherKey="MAMON")]
		public EntitySet<LOPHOC> LOPHOCs
		{
			get
			{
				return this._LOPHOCs;
			}
			set
			{
				this._LOPHOCs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHOA_HOC_MONHOC", Storage="_KHOA_HOC", ThisKey="MAKHOAHOC", OtherKey="MAKHOAHOC", IsForeignKey=true)]
		public KHOA_HOC KHOA_HOC
		{
			get
			{
				return this._KHOA_HOC.Entity;
			}
			set
			{
				KHOA_HOC previousValue = this._KHOA_HOC.Entity;
				if (((previousValue != value) 
							|| (this._KHOA_HOC.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KHOA_HOC.Entity = null;
						previousValue.MONHOCs.Remove(this);
					}
					this._KHOA_HOC.Entity = value;
					if ((value != null))
					{
						value.MONHOCs.Add(this);
						this._MAKHOAHOC = value.MAKHOAHOC;
					}
					else
					{
						this._MAKHOAHOC = default(string);
					}
					this.SendPropertyChanged("KHOA_HOC");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LOPHOCs(LOPHOC entity)
		{
			this.SendPropertyChanging();
			entity.MONHOC = this;
		}
		
		private void detach_LOPHOCs(LOPHOC entity)
		{
			this.SendPropertyChanging();
			entity.MONHOC = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PHANCONG")]
	public partial class PHANCONG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MAGIAOVIEN;
		
		private string _MACAHOC;
		
		private string _MALOPHOC;
		
		private EntityRef<CA_HOC> _CA_HOC;
		
		private EntityRef<LOPHOC> _LOPHOC;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAGIAOVIENChanging(string value);
    partial void OnMAGIAOVIENChanged();
    partial void OnMACAHOCChanging(string value);
    partial void OnMACAHOCChanged();
    partial void OnMALOPHOCChanging(string value);
    partial void OnMALOPHOCChanged();
    #endregion
		
		public PHANCONG()
		{
			this._CA_HOC = default(EntityRef<CA_HOC>);
			this._LOPHOC = default(EntityRef<LOPHOC>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAGIAOVIEN", DbType="NVarChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAGIAOVIEN
		{
			get
			{
				return this._MAGIAOVIEN;
			}
			set
			{
				if ((this._MAGIAOVIEN != value))
				{
					this.OnMAGIAOVIENChanging(value);
					this.SendPropertyChanging();
					this._MAGIAOVIEN = value;
					this.SendPropertyChanged("MAGIAOVIEN");
					this.OnMAGIAOVIENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MACAHOC", DbType="NVarChar(5) NOT NULL", CanBeNull=false)]
		public string MACAHOC
		{
			get
			{
				return this._MACAHOC;
			}
			set
			{
				if ((this._MACAHOC != value))
				{
					if (this._CA_HOC.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMACAHOCChanging(value);
					this.SendPropertyChanging();
					this._MACAHOC = value;
					this.SendPropertyChanged("MACAHOC");
					this.OnMACAHOCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MALOPHOC", DbType="NVarChar(5)")]
		public string MALOPHOC
		{
			get
			{
				return this._MALOPHOC;
			}
			set
			{
				if ((this._MALOPHOC != value))
				{
					if (this._LOPHOC.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMALOPHOCChanging(value);
					this.SendPropertyChanging();
					this._MALOPHOC = value;
					this.SendPropertyChanged("MALOPHOC");
					this.OnMALOPHOCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CA_HOC_PHANCONG", Storage="_CA_HOC", ThisKey="MACAHOC", OtherKey="MACAHOC", IsForeignKey=true)]
		public CA_HOC CA_HOC
		{
			get
			{
				return this._CA_HOC.Entity;
			}
			set
			{
				CA_HOC previousValue = this._CA_HOC.Entity;
				if (((previousValue != value) 
							|| (this._CA_HOC.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CA_HOC.Entity = null;
						previousValue.PHANCONGs.Remove(this);
					}
					this._CA_HOC.Entity = value;
					if ((value != null))
					{
						value.PHANCONGs.Add(this);
						this._MACAHOC = value.MACAHOC;
					}
					else
					{
						this._MACAHOC = default(string);
					}
					this.SendPropertyChanged("CA_HOC");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOPHOC_PHANCONG", Storage="_LOPHOC", ThisKey="MALOPHOC", OtherKey="MALOPHOC", IsForeignKey=true)]
		public LOPHOC LOPHOC
		{
			get
			{
				return this._LOPHOC.Entity;
			}
			set
			{
				LOPHOC previousValue = this._LOPHOC.Entity;
				if (((previousValue != value) 
							|| (this._LOPHOC.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOPHOC.Entity = null;
						previousValue.PHANCONGs.Remove(this);
					}
					this._LOPHOC.Entity = value;
					if ((value != null))
					{
						value.PHANCONGs.Add(this);
						this._MALOPHOC = value.MALOPHOC;
					}
					else
					{
						this._MALOPHOC = default(string);
					}
					this.SendPropertyChanged("LOPHOC");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PHONGHOC")]
	public partial class PHONGHOC : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MAPHONG;
		
		private string _TENPHONG;
		
		private EntitySet<THI> _THIs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAPHONGChanging(string value);
    partial void OnMAPHONGChanged();
    partial void OnTENPHONGChanging(string value);
    partial void OnTENPHONGChanged();
    #endregion
		
		public PHONGHOC()
		{
			this._THIs = new EntitySet<THI>(new Action<THI>(this.attach_THIs), new Action<THI>(this.detach_THIs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAPHONG", DbType="NVarChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAPHONG
		{
			get
			{
				return this._MAPHONG;
			}
			set
			{
				if ((this._MAPHONG != value))
				{
					this.OnMAPHONGChanging(value);
					this.SendPropertyChanging();
					this._MAPHONG = value;
					this.SendPropertyChanged("MAPHONG");
					this.OnMAPHONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENPHONG", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string TENPHONG
		{
			get
			{
				return this._TENPHONG;
			}
			set
			{
				if ((this._TENPHONG != value))
				{
					this.OnTENPHONGChanging(value);
					this.SendPropertyChanging();
					this._TENPHONG = value;
					this.SendPropertyChanged("TENPHONG");
					this.OnTENPHONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHONGHOC_THI", Storage="_THIs", ThisKey="MAPHONG", OtherKey="MAPHONG")]
		public EntitySet<THI> THIs
		{
			get
			{
				return this._THIs;
			}
			set
			{
				this._THIs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_THIs(THI entity)
		{
			this.SendPropertyChanging();
			entity.PHONGHOC = this;
		}
		
		private void detach_THIs(THI entity)
		{
			this.SendPropertyChanging();
			entity.PHONGHOC = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.THI")]
	public partial class THI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MAKITHI;
		
		private string _MAHOCVIEN;
		
		private string _MAPHONG;
		
		private System.DateTime _NGAYTHI;
		
		private double _KETQUA;
		
		private string _XEPLOAI;
		
		private EntityRef<KITHI> _KITHI;
		
		private EntityRef<HOC_VIEN> _HOC_VIEN;
		
		private EntityRef<PHONGHOC> _PHONGHOC;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAKITHIChanging(string value);
    partial void OnMAKITHIChanged();
    partial void OnMAHOCVIENChanging(string value);
    partial void OnMAHOCVIENChanged();
    partial void OnMAPHONGChanging(string value);
    partial void OnMAPHONGChanged();
    partial void OnNGAYTHIChanging(System.DateTime value);
    partial void OnNGAYTHIChanged();
    partial void OnKETQUAChanging(double value);
    partial void OnKETQUAChanged();
    partial void OnXEPLOAIChanging(string value);
    partial void OnXEPLOAIChanged();
    #endregion
		
		public THI()
		{
			this._KITHI = default(EntityRef<KITHI>);
			this._HOC_VIEN = default(EntityRef<HOC_VIEN>);
			this._PHONGHOC = default(EntityRef<PHONGHOC>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAKITHI", DbType="NVarChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAKITHI
		{
			get
			{
				return this._MAKITHI;
			}
			set
			{
				if ((this._MAKITHI != value))
				{
					if (this._KITHI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAKITHIChanging(value);
					this.SendPropertyChanging();
					this._MAKITHI = value;
					this.SendPropertyChanged("MAKITHI");
					this.OnMAKITHIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAHOCVIEN", DbType="NVarChar(5) NOT NULL", CanBeNull=false)]
		public string MAHOCVIEN
		{
			get
			{
				return this._MAHOCVIEN;
			}
			set
			{
				if ((this._MAHOCVIEN != value))
				{
					if (this._HOC_VIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAHOCVIENChanging(value);
					this.SendPropertyChanging();
					this._MAHOCVIEN = value;
					this.SendPropertyChanged("MAHOCVIEN");
					this.OnMAHOCVIENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAPHONG", DbType="NVarChar(5) NOT NULL", CanBeNull=false)]
		public string MAPHONG
		{
			get
			{
				return this._MAPHONG;
			}
			set
			{
				if ((this._MAPHONG != value))
				{
					if (this._PHONGHOC.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAPHONGChanging(value);
					this.SendPropertyChanging();
					this._MAPHONG = value;
					this.SendPropertyChanged("MAPHONG");
					this.OnMAPHONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYTHI", DbType="Date NOT NULL")]
		public System.DateTime NGAYTHI
		{
			get
			{
				return this._NGAYTHI;
			}
			set
			{
				if ((this._NGAYTHI != value))
				{
					this.OnNGAYTHIChanging(value);
					this.SendPropertyChanging();
					this._NGAYTHI = value;
					this.SendPropertyChanged("NGAYTHI");
					this.OnNGAYTHIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KETQUA", DbType="Float NOT NULL")]
		public double KETQUA
		{
			get
			{
				return this._KETQUA;
			}
			set
			{
				if ((this._KETQUA != value))
				{
					this.OnKETQUAChanging(value);
					this.SendPropertyChanging();
					this._KETQUA = value;
					this.SendPropertyChanged("KETQUA");
					this.OnKETQUAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_XEPLOAI", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string XEPLOAI
		{
			get
			{
				return this._XEPLOAI;
			}
			set
			{
				if ((this._XEPLOAI != value))
				{
					this.OnXEPLOAIChanging(value);
					this.SendPropertyChanging();
					this._XEPLOAI = value;
					this.SendPropertyChanged("XEPLOAI");
					this.OnXEPLOAIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KITHI_THI", Storage="_KITHI", ThisKey="MAKITHI", OtherKey="MAKITHI", IsForeignKey=true)]
		public KITHI KITHI
		{
			get
			{
				return this._KITHI.Entity;
			}
			set
			{
				KITHI previousValue = this._KITHI.Entity;
				if (((previousValue != value) 
							|| (this._KITHI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KITHI.Entity = null;
						previousValue.THI = null;
					}
					this._KITHI.Entity = value;
					if ((value != null))
					{
						value.THI = this;
						this._MAKITHI = value.MAKITHI;
					}
					else
					{
						this._MAKITHI = default(string);
					}
					this.SendPropertyChanged("KITHI");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HOC_VIEN_THI", Storage="_HOC_VIEN", ThisKey="MAHOCVIEN", OtherKey="MAHOCVIEN", IsForeignKey=true)]
		public HOC_VIEN HOC_VIEN
		{
			get
			{
				return this._HOC_VIEN.Entity;
			}
			set
			{
				HOC_VIEN previousValue = this._HOC_VIEN.Entity;
				if (((previousValue != value) 
							|| (this._HOC_VIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HOC_VIEN.Entity = null;
						previousValue.THIs.Remove(this);
					}
					this._HOC_VIEN.Entity = value;
					if ((value != null))
					{
						value.THIs.Add(this);
						this._MAHOCVIEN = value.MAHOCVIEN;
					}
					else
					{
						this._MAHOCVIEN = default(string);
					}
					this.SendPropertyChanged("HOC_VIEN");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHONGHOC_THI", Storage="_PHONGHOC", ThisKey="MAPHONG", OtherKey="MAPHONG", IsForeignKey=true)]
		public PHONGHOC PHONGHOC
		{
			get
			{
				return this._PHONGHOC.Entity;
			}
			set
			{
				PHONGHOC previousValue = this._PHONGHOC.Entity;
				if (((previousValue != value) 
							|| (this._PHONGHOC.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PHONGHOC.Entity = null;
						previousValue.THIs.Remove(this);
					}
					this._PHONGHOC.Entity = value;
					if ((value != null))
					{
						value.THIs.Add(this);
						this._MAPHONG = value.MAPHONG;
					}
					else
					{
						this._MAPHONG = default(string);
					}
					this.SendPropertyChanged("PHONGHOC");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TINHTRANGPHONG")]
	public partial class TINHTRANGPHONG
	{
		
		private string _MALOPHOC;
		
		private string _MACAHOC;
		
		private string _MAPHONG;
		
		public TINHTRANGPHONG()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MALOPHOC", DbType="NVarChar(5) NOT NULL", CanBeNull=false)]
		public string MALOPHOC
		{
			get
			{
				return this._MALOPHOC;
			}
			set
			{
				if ((this._MALOPHOC != value))
				{
					this._MALOPHOC = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MACAHOC", DbType="NVarChar(5) NOT NULL", CanBeNull=false)]
		public string MACAHOC
		{
			get
			{
				return this._MACAHOC;
			}
			set
			{
				if ((this._MACAHOC != value))
				{
					this._MACAHOC = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAPHONG", DbType="NVarChar(5) NOT NULL", CanBeNull=false)]
		public string MAPHONG
		{
			get
			{
				return this._MAPHONG;
			}
			set
			{
				if ((this._MAPHONG != value))
				{
					this._MAPHONG = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
